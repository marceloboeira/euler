--
-- Project Euler: Challenge 012 - http://projecteuler.net/problem=12
--
-- The sequence of triangle numbers is generated by adding the natural numbers.
-- So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
--
-- 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
--
-- Let us list the factors of the first seven triangle numbers:
--
--  1: 1
--  3: 1,3
--  6: 1,2,3,6
-- 10: 1,2,5,10
-- 15: 1,3,5,15
-- 21: 1,3,7,21
-- 28: 1,2,4,7,14,28
-- We can see that 28 is the first triangle number to have over five divisors.
--
-- What is the value of the first triangle number to have over five hundred divisors?
--
-- Answer: 76576500
--
-- Triangular number generator
-- https://en.wikipedia.org/wiki/Triangular_number
triangular :: Int -> Int
triangular 0 = 0
triangular x = (x * (x + 1)) `div` 2

divisors :: Int -> [Int]
divisors k = divisors' 2 k
  where
    divisors' n k
      | n * n > k = [k]
      | n * n == k = [n, k]
      | mod k n == 0 = (n:(div k n):result)
      | otherwise = result
      where result = divisors' (n+1) k

main = do print $ head $ dropWhile ((< 500) . length . divisors) [ triangular x | x <- [1..] ]
